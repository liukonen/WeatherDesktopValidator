using System;
using System.Collections.Generic;
using System.Text;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace WeatherDesktopSharedCore.Interfaces
{
    public class SunRiseSet : BaseSun
    {
        private Boolean _Success;
        private string _err;

        private DateTime _solarNoon;
        private DateTime _sunRise;
        private DateTime _sunSet;
        private string _status;
        public override string ToString()
        {
            return "SunRiseSet";
        }
        public override string ErrorMessages() { return _err; }
        public override bool Success() { return _Success; }

        public override DateTime SolarNoon() { return _solarNoon; }
        public override string Status() { return _status; }
        public override DateTime SunRise() { return _sunRise; }
        public override DateTime SunSet() { return _sunSet; }



        public override void Invoke()
        {

            //SunRiseSetResponse response = new SunRiseSetResponse();
            try
            {
                string value;
               // if (SharedObjects.Cache.Exists(ClassName)) { value = SharedObjects.Cache.StringValue(ClassName); }
                //else
                //{
                    string url = string.Format(SRS_Url, Latitude.ToString(), Longitude.ToString());
                    value = CompressedCallSite(url);
                //   SharedObjects.Cache.Set(ClassName, value);
                //}

                //JavaScriptSerializer jsSerialization = new JavaScriptSerializer();
                SunRiseSetObject SunRiseSetResponse = JsonConvert.DeserializeObject<SunRiseSetObject>(value);// jsSerialization.Deserialize<SunRiseSetObject>(value);

               _status = SunRiseSetResponse.status;
                if (_status.ToLower() == "ok")
                {
                    _solarNoon = DateTime.Parse(SunRiseSetResponse.results.solar_noon).ToLocalTime();
                    _sunRise = DateTime.Parse(SunRiseSetResponse.results.sunrise).ToLocalTime();
                    _sunSet = DateTime.Parse(SunRiseSetResponse.results.sunset).ToLocalTime();
                    _Success = true;
                }

            }
            catch (Exception x) { _err = x.ToString(); _Success = false;    }
 
        }

        const string SRS_Url = "";
        const double Latitude = 0;
        const double Longitude = 0;




#pragma warning disable 0649
        #region Auto Generated Code for JSON Deserilization

        //------------------------------------------------------------------------------
        // <auto-generated>
        //     This code was generated by a tool.
        //     Runtime Version:4.0.30319.42000
        //     http://jsontodatacontract.azurewebsites.net/
        //     Changes to this file may cause incorrect behavior and will be lost if
        //     the code is regenerated.
        // </auto-generated>
        //------------------------------------------------------------------------------



        // Type created for JSON at <<root>>
        [DataContractAttribute()]
        partial class SunRiseSetObject
        {

            [DataMemberAttribute()]
            public Results results;

            [DataMemberAttribute()]
            public string status;
        }

        // Type created for JSON at <<root>> --> results
        [DataContractAttribute(Name = "results")]
        partial class Results
        {

            [DataMemberAttribute()]
            public string sunrise;

            [DataMemberAttribute()]
            public string sunset;

            [DataMemberAttribute()]
            public string solar_noon;

            [DataMemberAttribute()]
            public string day_length;

            [DataMemberAttribute()]
            public string civil_twilight_begin;

            [DataMemberAttribute()]
            public string civil_twilight_end;

            [DataMemberAttribute()]
            public string nautical_twilight_begin;

            [DataMemberAttribute()]
            public string nautical_twilight_end;

            [DataMemberAttribute()]
            public string astronomical_twilight_begin;

            [DataMemberAttribute()]
            public string astronomical_twilight_end;
        }
        #endregion
#pragma warning restore 0649
    }
}
